SET SERVEROUTPUT ON;

/**
* @INFO: CALCULATE PATIENT'S YEAR
* @PARAM: DATE
* @RETURN: INTEGER
*/
CREATE OR REPLACE FUNCTION YEARS_PATIENT(BIRTHDATE IN PATIENT.BIRTHDATE%TYPE)
RETURN INTEGER
IS
    r_Years INTEGER;
BEGIN
    SELECT FLOOR(MONTHS_BETWEEN(SYSDATE,BIRTHDATE)/12) INTO r_Years FROM DUAL;
    
    RETURN r_Years;
END;

/**
* @INFO: IS ADULT
* @PARAM: ID
* @RETURN: BOOLEAN VARCHAR
*/
CREATE OR REPLACE FUNCTION is_Adult(a_ID IN PATIENT.ID%TYPE)
RETURN VARCHAR2
IS
    BOOL VARCHAR(10);
BEGIN
    SELECT 
    CASE WHEN YEARS_PATIENT(BIRTHDATE) >=18
        THEN 'TRUE'
        ELSE 'FALSE'
    END INTO BOOL
    FROM PATIENT WHERE PATIENT.ID = a_ID;

    RETURN BOOL;
END;

/**
* @INFO: AVERAGE PATIENTS
* @PARAM: -
* @RETURN: NUMBER
*/
CREATE OR REPLACE FUNCTION PROM_PATIENT
RETURN NUMBER
IS
      prom NUMBER;
    
BEGIN
    SELECT FLOOR (SUM(YEARS_PATIENT(BIRTHDATE))/COUNT(BIRTHDATE)) INTO prom FROM PATIENT;
    RETURN prom;
END;

/**
* @INFO: COUNT GENDER
* @PARAM: VARCHAR
* @RETURN: INTEGER
*/
CREATE OR REPLACE FUNCTION COUNT_GENDER(a_gender IN PATIENT.GENDER%TYPE)
RETURN INTEGER
IS
    c_gender INTEGER;
BEGIN
    SELECT COUNT( UPPER(GENDER)) INTO c_gender FROM PATIENT WHERE GENDER=a_gender;
    RETURN c_gender;
END;

/**
* @INFO: AVERAGE PATIENTS BY GENDER
* @PARAM: VARCHAR
* @RETURN: INTEGER
*/
CREATE OR REPLACE FUNCTION PROM_YEARS_GENDER(a_gender IN PATIENT.GENDER%TYPE)
RETURN INTEGER
IS
    prom INTEGER;
BEGIN
    SELECT FLOOR(SUM(YEARS_PATIENT(BIRTHDATE))/COUNT(ID)) INTO prom FROM PATIENT WHERE gender = a_gender;
    
    RETURN prom;
END;

BEGIN
    UPDATE PATIENT SET birthdate=TO_DATE('17/07/2018','LLL/MM/YYYY') WHERE ID = 8;
    SELECT FLOOR(SUM(YEARS_PATIENT(BIRTHDATE))/COUNT(BIRTHDATE)) FROM PATIENT;
    
    UPDATE PATIENT SET GENDER='FEMALE' WHERE GENDER = 'Femenino';
    
    SELECT id,NAME,LASTNAME, YEARS_PATIENT(BIRTHDATE),BIRTHDATE FROM PATIENT;
    SELECT * FROM HISTORICAL;
    

END;



